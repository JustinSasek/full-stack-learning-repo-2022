{"ast":null,"code":"import _slicedToArray from \"/Users/justinsasek/Code/TPEO/full-stack-learning-repo-2022/Week_9/homework frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useState } from 'react';\nimport { useWindowEvent } from '../use-window-event/use-window-event.js';\nfunction getScrollPosition() {\n  return typeof window !== \"undefined\" ? {\n    x: window.pageXOffset,\n    y: window.pageYOffset\n  } : {\n    x: 0,\n    y: 0\n  };\n}\nfunction scrollTo(_ref) {\n  var x = _ref.x,\n    y = _ref.y;\n  if (typeof window !== \"undefined\") {\n    var scrollOptions = {\n      behavior: \"smooth\"\n    };\n    if (typeof x === \"number\") {\n      scrollOptions.left = x;\n    }\n    if (typeof y === \"number\") {\n      scrollOptions.top = y;\n    }\n    window.scrollTo(scrollOptions);\n  }\n}\nfunction useWindowScroll() {\n  var _useState = useState(getScrollPosition()),\n    _useState2 = _slicedToArray(_useState, 2),\n    position = _useState2[0],\n    setPosition = _useState2[1];\n  useWindowEvent(\"scroll\", function () {\n    return setPosition(getScrollPosition());\n  });\n  useWindowEvent(\"resize\", function () {\n    return setPosition(getScrollPosition());\n  });\n  return [position, scrollTo];\n}\nexport { useWindowScroll };","map":{"version":3,"mappings":";;;AAEA,SAASA,iBAAiB,GAAG;EAC3B,OAAO,OAAOC,MAAM,KAAK,WAAW,GAAG;IAAEC,CAAC,EAAED,MAAM,CAACE,WAAW;IAAEC,CAAC,EAAEH,MAAM,CAACI;EAAW,CAAE,GAAG;IAAEH,CAAC,EAAE,CAAC;IAAEE,CAAC,EAAE;EAAC,CAAE;AAC1G;AACA,SAASE,QAAQ,OAAW;EAAA,IAARJ,CAAC,QAADA,CAAC;IAAEE,CAAC,QAADA,CAAC;EACtB,IAAI,OAAOH,MAAM,KAAK,WAAW,EAAE;IACjC,IAAMM,aAAa,GAAG;MAAEC,QAAQ,EAAE;IAAQ,CAAE;IAC5C,IAAI,OAAON,CAAC,KAAK,QAAQ,EAAE;MACzBK,aAAa,CAACE,IAAI,GAAGP,CAAC;IAC5B;IACI,IAAI,OAAOE,CAAC,KAAK,QAAQ,EAAE;MACzBG,aAAa,CAACG,GAAG,GAAGN,CAAC;IAC3B;IACIH,MAAM,CAACK,QAAQ,CAACC,aAAa,CAAC;EAClC;AACA;AACO,SAASI,eAAe,GAAG;EAChC,gBAAgCC,QAAQ,CAACZ,iBAAiB,EAAE,CAAC;IAAA;IAAtDa,QAAQ;IAAEC,WAAW;EAC5BC,cAAc,CAAC,QAAQ,EAAE;IAAA,OAAMD,WAAW,CAACd,iBAAiB,EAAE,CAAC;EAAA,EAAC;EAChEe,cAAc,CAAC,QAAQ,EAAE;IAAA,OAAMD,WAAW,CAACd,iBAAiB,EAAE,CAAC;EAAA,EAAC;EAChE,OAAO,CAACa,QAAQ,EAAEP,QAAQ,CAAC;AAC7B","names":["getScrollPosition","window","x","pageXOffset","y","pageYOffset","scrollTo","scrollOptions","behavior","left","top","useWindowScroll","useState","position","setPosition","useWindowEvent"],"sources":["../../src/use-window-scroll/use-window-scroll.ts"],"sourcesContent":["import { useState } from 'react';\nimport { useWindowEvent } from '../use-window-event/use-window-event';\n\ninterface ScrollPosition {\n  x: number;\n  y: number;\n}\n\nfunction getScrollPosition(): ScrollPosition {\n  return typeof window !== 'undefined'\n    ? { x: window.pageXOffset, y: window.pageYOffset }\n    : { x: 0, y: 0 };\n}\n\nfunction scrollTo({ x, y }: Partial<ScrollPosition>) {\n  if (typeof window !== 'undefined') {\n    const scrollOptions: ScrollToOptions = { behavior: 'smooth' };\n\n    if (typeof x === 'number') {\n      scrollOptions.left = x;\n    }\n\n    if (typeof y === 'number') {\n      scrollOptions.top = y;\n    }\n\n    window.scrollTo(scrollOptions);\n  }\n}\n\nexport function useWindowScroll() {\n  const [position, setPosition] = useState(getScrollPosition());\n\n  useWindowEvent('scroll', () => setPosition(getScrollPosition()));\n  useWindowEvent('resize', () => setPosition(getScrollPosition()));\n\n  return [position, scrollTo] as const;\n}\n"]},"metadata":{},"sourceType":"module"}