{"ast":null,"code":"import _slicedToArray from \"/Users/justinsasek/Code/TPEO/full-stack-learning-repo-2022/Week_9/homework frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useState } from 'react';\nfunction useValidatedState(initialValue, validation) {\n  var _useState = useState(initialValue),\n    _useState2 = _slicedToArray(_useState, 2),\n    value = _useState2[0],\n    setValue = _useState2[1];\n  var _useState3 = useState(validation(initialValue) ? initialValue : void 0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    lastValidValue = _useState4[0],\n    setLastValidValue = _useState4[1];\n  var _useState5 = useState(validation(initialValue)),\n    _useState6 = _slicedToArray(_useState5, 2),\n    valid = _useState6[0],\n    setValid = _useState6[1];\n  var onChange = function onChange(val) {\n    if (validation(val)) {\n      setLastValidValue(val);\n      setValid(true);\n    } else {\n      setValid(false);\n    }\n    setValue(val);\n  };\n  return [{\n    value: value,\n    lastValidValue: lastValidValue,\n    valid: valid\n  }, onChange];\n}\nexport { useValidatedState };","map":{"version":3,"mappings":";;AACO,SAASA,iBAAiB,CAACC,YAAY,EAAEC,UAAU,EAAE;EAC1D,gBAA0BC,QAAQ,CAACF,YAAY,CAAC;IAAA;IAAzCG,KAAK;IAAEC,QAAQ;EACtB,iBAA4CF,QAAQ,CAACD,UAAU,CAACD,YAAY,CAAC,GAAGA,YAAY,GAAG,KAAK,CAAC,CAAC;IAAA;IAA/FK,cAAc;IAAEC,iBAAiB;EACxC,iBAA0BJ,QAAQ,CAACD,UAAU,CAACD,YAAY,CAAC,CAAC;IAAA;IAArDO,KAAK;IAAEC,QAAQ;EACtB,IAAMC,QAAQ,GAAG,SAAXA,QAAQ,CAAIC,GAAG,EAAK;IACxB,IAAIT,UAAU,CAACS,GAAG,CAAC,EAAE;MACnBJ,iBAAiB,CAACI,GAAG,CAAC;MACtBF,QAAQ,CAAC,IAAI,CAAC;IACpB,CAAK,MAAM;MACLA,QAAQ,CAAC,KAAK,CAAC;IACrB;IACIJ,QAAQ,CAACM,GAAG,CAAC;EACjB,CAAG;EACD,OAAO,CAAC;IAAEP,KAAK,EAALA,KAAK;IAAEE,cAAc,EAAdA,cAAc;IAAEE,KAAK,EAALA;EAAK,CAAE,EAAEE,QAAQ,CAAC;AACrD","names":["useValidatedState","initialValue","validation","useState","value","setValue","lastValidValue","setLastValidValue","valid","setValid","onChange","val"],"sources":["../../src/use-validated-state/use-validated-state.ts"],"sourcesContent":["import { useState } from 'react';\n\nexport function useValidatedState<T>(initialValue: T, validation: (value: T) => boolean) {\n  const [value, setValue] = useState<T>(initialValue);\n  const [lastValidValue, setLastValidValue] = useState<T>(\n    validation(initialValue) ? initialValue : undefined\n  );\n  const [valid, setValid] = useState<boolean>(validation(initialValue));\n\n  const onChange = (val: T) => {\n    if (validation(val)) {\n      setLastValidValue(val);\n      setValid(true);\n    } else {\n      setValid(false);\n    }\n\n    setValue(val);\n  };\n\n  return [{ value, lastValidValue, valid }, onChange] as const;\n}\n"]},"metadata":{},"sourceType":"module"}