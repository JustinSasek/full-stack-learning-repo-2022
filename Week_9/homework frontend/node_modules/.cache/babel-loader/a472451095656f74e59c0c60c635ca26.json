{"ast":null,"code":"import createCache from '@emotion/cache';\nimport { useMantineEmotionOptions } from '../theme/MantineProvider.js';\nvar defaultCacheOptions = {\n  key: \"mantine\",\n  prepend: true\n};\nvar _ref = function () {\n    var cache;\n    var _key = defaultCacheOptions.key;\n    function _getCache(options) {\n      if (cache === void 0 || _key !== (options == null ? void 0 : options.key)) {\n        _key = (options == null ? void 0 : options.key) || \"mantine\";\n        cache = createCache((options == null ? void 0 : options.key) ? options : defaultCacheOptions);\n      }\n      return cache;\n    }\n    return {\n      getCache: _getCache\n    };\n  }(),\n  getCache = _ref.getCache;\nfunction useEmotionCache() {\n  var options = useMantineEmotionOptions();\n  return getCache(options);\n}\nexport { getCache, useEmotionCache };","map":{"version":3,"mappings":";;AAEA,IAAMA,mBAAmB,GAAG;EAC1BC,GAAG,EAAE,SAAS;EACdC,OAAO,EAAE;AACX,CAAC;AACW,WAAiB,YAAM;IACjC,IAAIC,KAAK;IACT,IAAIC,IAAI,GAAGJ,mBAAmB,CAACC,GAAG;IAClC,SAASI,SAAS,CAACC,OAAO,EAAE;MAC1B,IAAIH,KAAK,KAAK,KAAK,CAAC,IAAIC,IAAI,MAAME,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACL,GAAG,CAAC,EAAE;QACzEG,IAAI,GAAG,CAACE,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACL,GAAG,KAAK,SAAS;QAC5DE,KAAK,GAAGI,WAAW,CAAC,CAACD,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACL,GAAG,IAAIK,OAAO,GAAGN,mBAAmB,CAAC;MACnG;MACI,OAAOG,KAAK;IAChB;IACE,OAAO;MAAEK,QAAQ,EAAEH;IAAS,CAAE;EAChC,CAAC;EAXcG,QAAQ,QAARA,QAAQ;AAYhB,SAASC,eAAe,GAAG;EAChC,IAAMH,OAAO,GAAGI,wBAAwB,EAAE;EAC1C,OAAOF,QAAQ,CAACF,OAAO,CAAC;AAC1B","names":["defaultCacheOptions","key","prepend","cache","_key","_getCache","options","createCache","getCache","useEmotionCache","useMantineEmotionOptions"],"sources":["../../src/tss/use-emotion-cache.ts"],"sourcesContent":["import createCache, { EmotionCache, Options } from '@emotion/cache';\nimport { useMantineEmotionOptions } from '../theme/MantineProvider';\n\nconst defaultCacheOptions: Options = {\n  key: 'mantine',\n  prepend: true,\n};\n\nexport const { getCache } = (() => {\n  let cache: EmotionCache;\n  let _key = defaultCacheOptions.key;\n\n  function _getCache(options?: Options) {\n    if (cache === undefined || _key !== options?.key) {\n      _key = options?.key || 'mantine';\n      cache = createCache(options?.key ? options : defaultCacheOptions);\n    }\n\n    return cache;\n  }\n\n  return { getCache: _getCache };\n})();\n\nexport function useEmotionCache() {\n  const options = useMantineEmotionOptions();\n  return getCache(options);\n}\n"]},"metadata":{},"sourceType":"module"}