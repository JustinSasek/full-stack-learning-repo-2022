{"ast":null,"code":"import _slicedToArray from \"/Users/justinsasek/Code/TPEO/full-stack-learning-repo-2022/Week_9/homework frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { createContext, useContext } from 'react';\nfunction createUseContext(defaultValue) {\n  var Context = createContext(defaultValue);\n  function useContextConsumer(component) {\n    var ctx = useContext(Context);\n    var _component$split = component.split(\".\"),\n      _component$split2 = _slicedToArray(_component$split, 1),\n      parentName = _component$split2[0];\n    if (!ctx) {\n      throw new Error(\"\".concat(component, \" component was rendered outside of \").concat(parentName, \" component context\"));\n    }\n    return ctx;\n  }\n  return [Context.Provider, useContextConsumer];\n}\nexport { createUseContext };","map":{"version":3,"mappings":";;AACO,SAASA,gBAAgB,CAACC,YAAY,EAAE;EAC7C,IAAMC,OAAO,GAAGC,aAAa,CAACF,YAAY,CAAC;EAC3C,SAASG,kBAAkB,CAACC,SAAS,EAAE;IACrC,IAAMC,GAAG,GAAGC,UAAU,CAACL,OAAO,CAAC;IAC/B,uBAAqBG,SAAS,CAACG,KAAK,CAAC,GAAG,CAAC;MAAA;MAAlCC,UAAU;IACjB,IAAI,CAACH,GAAG,EAAE;MACR,MAAM,IAAII,KAAK,WAAIL,SAAS,gDAAsCI,UAAU,wBAAqB;IACvG;IACI,OAAOH,GAAG;EACd;EACE,OAAO,CAACJ,OAAO,CAACS,QAAQ,EAAEP,kBAAkB,CAAC;AAC/C","names":["createUseContext","defaultValue","Context","createContext","useContextConsumer","component","ctx","useContext","split","parentName","Error","Provider"],"sources":["../../../src/utils/create-use-context/create-use-context.ts"],"sourcesContent":["import { createContext, useContext } from 'react';\n\nexport function createUseContext<T>(defaultValue: T) {\n  const Context = createContext<T>(defaultValue);\n\n  function useContextConsumer(component: `${string}.${string}`) {\n    const ctx = useContext(Context);\n    const [parentName] = component.split('.');\n\n    if (!ctx) {\n      throw new Error(\n        `${component} component was rendered outside of ${parentName} component context`\n      );\n    }\n\n    return ctx;\n  }\n\n  return [Context.Provider, useContextConsumer] as const;\n}\n"]},"metadata":{},"sourceType":"module"}