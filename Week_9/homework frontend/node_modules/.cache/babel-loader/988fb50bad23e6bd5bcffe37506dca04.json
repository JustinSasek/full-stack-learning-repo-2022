{"ast":null,"code":"function yupResolver(schema) {\n  var _schema = schema;\n  return function (values) {\n    try {\n      _schema.validateSync(values, {\n        abortEarly: false\n      });\n      return {};\n    } catch (_yupError) {\n      var yupError = _yupError;\n      var results = {};\n      yupError.inner.forEach(function (error) {\n        results[error.path.replace(\"[\", \".\").replace(\"]\", \"\")] = error.message;\n      });\n      return results;\n    }\n  };\n}\nexport { yupResolver };","map":{"version":3,"mappings":"AAAO,SAASA,WAAW,CAACC,MAAM,EAAE;EAClC,IAAMC,OAAO,GAAGD,MAAM;EACtB,OAAO,UAACE,MAAM,EAAK;IACjB,IAAI;MACFD,OAAO,CAACE,YAAY,CAACD,MAAM,EAAE;QAAEE,UAAU,EAAE;MAAK,CAAE,CAAC;MACnD,OAAO,EAAE;IACf,CAAK,CAAC,OAAOC,SAAS,EAAE;MAClB,IAAMC,QAAQ,GAAGD,SAAS;MAC1B,IAAME,OAAO,GAAG,EAAE;MAClBD,QAAQ,CAACE,KAAK,CAACC,OAAO,CAAC,UAACC,KAAK,EAAK;QAChCH,OAAO,CAACG,KAAK,CAACC,IAAI,CAACC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAACA,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,GAAGF,KAAK,CAACG,OAAO;MAC9E,CAAO,CAAC;MACF,OAAON,OAAO;IACpB;EACA,CAAG;AACH","names":["yupResolver","schema","_schema","values","validateSync","abortEarly","_yupError","yupError","results","inner","forEach","error","path","replace","message"],"sources":["../../../src/resolvers/yup-resolver/yup-resolver.ts"],"sourcesContent":["import type { FormErrors } from '../../types';\n\ninterface YupError {\n  path: string;\n  message: string;\n}\n\ninterface YupValidationResult {\n  inner: YupError[];\n}\n\ninterface YupSchema {\n  validateSync(values: Record<string, any>, options: { abortEarly: boolean }): void;\n}\n\nexport function yupResolver(schema: any) {\n  const _schema: YupSchema = schema;\n\n  return (values: Record<string, any>): FormErrors => {\n    try {\n      _schema.validateSync(values, { abortEarly: false });\n      return {};\n    } catch (_yupError) {\n      const yupError: YupValidationResult = _yupError;\n      const results = {};\n\n      yupError.inner.forEach((error) => {\n        results[error.path.replace('[', '.').replace(']', '')] = error.message;\n      });\n\n      return results;\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}