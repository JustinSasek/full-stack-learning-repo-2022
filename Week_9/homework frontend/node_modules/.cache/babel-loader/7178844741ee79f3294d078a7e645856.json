{"ast":null,"code":"import _slicedToArray from \"/Users/justinsasek/Code/TPEO/full-stack-learning-repo-2022/Week_9/homework frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useMove, clampUseMovePosition } from '@mantine/hooks';\nimport { Thumb } from '../Thumb/Thumb.js';\nimport useStyles from './Saturation.styles.js';\nimport { convertHsvaTo } from '../converters/converters.js';\nfunction Saturation(_ref) {\n  var value = _ref.value,\n    onChange = _ref.onChange,\n    _ref$focusable = _ref.focusable,\n    focusable = _ref$focusable === void 0 ? true : _ref$focusable,\n    _ref$__staticSelector = _ref.__staticSelector,\n    __staticSelector = _ref$__staticSelector === void 0 ? \"saturation\" : _ref$__staticSelector,\n    size = _ref.size,\n    color = _ref.color,\n    saturationLabel = _ref.saturationLabel,\n    classNames = _ref.classNames,\n    styles = _ref.styles;\n  var _useStyles = useStyles({\n      size: size\n    }, {\n      classNames: classNames,\n      styles: styles,\n      name: __staticSelector\n    }),\n    classes = _useStyles.classes;\n  var _useState = useState({\n      x: value.s / 100,\n      y: 1 - value.v / 100\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    position = _useState2[0],\n    setPosition = _useState2[1];\n  var _useMove = useMove(function (_ref2) {\n      var x = _ref2.x,\n        y = _ref2.y;\n      onChange({\n        s: Math.round(x * 100),\n        v: Math.round((1 - y) * 100)\n      });\n    }),\n    ref = _useMove.ref;\n  useEffect(function () {\n    setPosition({\n      x: value.s / 100,\n      y: 1 - value.v / 100\n    });\n  }, [value.s, value.v]);\n  var handleArrow = function handleArrow(event, pos) {\n    event.preventDefault();\n    var _position = clampUseMovePosition(pos);\n    onChange({\n      s: Math.round(_position.x * 100),\n      v: Math.round((1 - _position.y) * 100)\n    });\n  };\n  var handleKeyDown = function handleKeyDown(event) {\n    switch (event.nativeEvent.code) {\n      case \"ArrowUp\":\n        {\n          handleArrow(event, {\n            y: position.y - 0.05,\n            x: position.x\n          });\n          break;\n        }\n      case \"ArrowDown\":\n        {\n          handleArrow(event, {\n            y: position.y + 0.05,\n            x: position.x\n          });\n          break;\n        }\n      case \"ArrowRight\":\n        {\n          handleArrow(event, {\n            x: position.x + 0.05,\n            y: position.y\n          });\n          break;\n        }\n      case \"ArrowLeft\":\n        {\n          handleArrow(event, {\n            x: position.x - 0.05,\n            y: position.y\n          });\n          break;\n        }\n    }\n  };\n  return /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.saturation,\n    ref: ref,\n    role: \"slider\",\n    \"aria-label\": saturationLabel,\n    \"aria-valuenow\": position.x,\n    \"aria-valuetext\": convertHsvaTo(\"rgba\", value),\n    tabIndex: focusable ? 0 : -1,\n    onKeyDown: handleKeyDown\n  }, /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.saturationOverlay,\n    style: {\n      backgroundColor: \"hsl(\".concat(value.h, \", 100%, 50%)\")\n    }\n  }), /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.saturationOverlay,\n    style: {\n      backgroundImage: \"linear-gradient(90deg, #fff, transparent)\"\n    }\n  }), /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.saturationOverlay,\n    style: {\n      backgroundImage: \"linear-gradient(0deg, #000, transparent)\"\n    }\n  }), /* @__PURE__ */React.createElement(Thumb, {\n    __staticSelector: __staticSelector,\n    classNames: classNames,\n    styles: styles,\n    position: position,\n    className: classes.saturationThumb,\n    style: {\n      backgroundColor: color\n    },\n    size: size\n  }));\n}\nSaturation.displayName = \"@mantine/core/Saturation\";\nexport { Saturation };","map":{"version":3,"mappings":"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","names":["Saturation","value","onChange","focusable","__staticSelector","size","color","saturationLabel","classNames","styles","useStyles","name","classes","useState","x","s","y","v","position","setPosition","useMove","Math","round","ref","useEffect","handleArrow","event","pos","preventDefault","_position","clampUseMovePosition","handleKeyDown","nativeEvent","code","React","createElement","className","saturation","role","convertHsvaTo","tabIndex","onKeyDown","saturationOverlay","style","backgroundColor","h","backgroundImage","Thumb","saturationThumb","displayName"],"sources":["../../../../src/components/ColorPicker/Saturation/Saturation.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useMove, clampUseMovePosition, UseMovePosition } from '@mantine/hooks';\nimport { DefaultProps, MantineSize, Selectors } from '@mantine/styles';\nimport { HsvaColor } from '../types';\nimport { Thumb, ThumbStylesNames } from '../Thumb/Thumb';\nimport useStyles from './Saturation.styles';\nimport { convertHsvaTo } from '../converters';\n\nexport type SaturationStylesNames =\n  | Exclude<Selectors<typeof useStyles>, 'saturationOverlay' | 'saturationThumb'>\n  | ThumbStylesNames;\n\ninterface SaturationProps extends DefaultProps<SaturationStylesNames> {\n  value: HsvaColor;\n  onChange(color: Partial<HsvaColor>): void;\n  saturationLabel?: string;\n  size: MantineSize;\n  color: string;\n  focusable?: boolean;\n  __staticSelector?: string;\n}\n\nexport function Saturation({\n  value,\n  onChange,\n  focusable = true,\n  __staticSelector = 'saturation',\n  size,\n  color,\n  saturationLabel,\n  classNames,\n  styles,\n}: SaturationProps) {\n  const { classes } = useStyles({ size }, { classNames, styles, name: __staticSelector });\n  const [position, setPosition] = useState({ x: value.s / 100, y: 1 - value.v / 100 });\n\n  const { ref } = useMove(({ x, y }) => {\n    onChange({ s: Math.round(x * 100), v: Math.round((1 - y) * 100) });\n  });\n\n  useEffect(() => {\n    setPosition({ x: value.s / 100, y: 1 - value.v / 100 });\n  }, [value.s, value.v]);\n\n  const handleArrow = (event: React.KeyboardEvent<HTMLDivElement>, pos: UseMovePosition) => {\n    event.preventDefault();\n    const _position = clampUseMovePosition(pos);\n    onChange({ s: Math.round(_position.x * 100), v: Math.round((1 - _position.y) * 100) });\n  };\n\n  const handleKeyDown = (event: React.KeyboardEvent<HTMLDivElement>) => {\n    switch (event.nativeEvent.code) {\n      case 'ArrowUp': {\n        handleArrow(event, { y: position.y - 0.05, x: position.x });\n        break;\n      }\n\n      case 'ArrowDown': {\n        handleArrow(event, { y: position.y + 0.05, x: position.x });\n        break;\n      }\n\n      case 'ArrowRight': {\n        handleArrow(event, { x: position.x + 0.05, y: position.y });\n        break;\n      }\n\n      case 'ArrowLeft': {\n        handleArrow(event, { x: position.x - 0.05, y: position.y });\n        break;\n      }\n    }\n  };\n\n  return (\n    <div\n      className={classes.saturation}\n      ref={ref}\n      role=\"slider\"\n      aria-label={saturationLabel}\n      aria-valuenow={position.x}\n      aria-valuetext={convertHsvaTo('rgba', value)}\n      tabIndex={focusable ? 0 : -1}\n      onKeyDown={handleKeyDown}\n    >\n      <div\n        className={classes.saturationOverlay}\n        style={{ backgroundColor: `hsl(${value.h}, 100%, 50%)` }}\n      />\n\n      <div\n        className={classes.saturationOverlay}\n        style={{ backgroundImage: 'linear-gradient(90deg, #fff, transparent)' }}\n      />\n\n      <div\n        className={classes.saturationOverlay}\n        style={{ backgroundImage: 'linear-gradient(0deg, #000, transparent)' }}\n      />\n\n      <Thumb\n        __staticSelector={__staticSelector}\n        classNames={classNames}\n        styles={styles}\n        position={position}\n        className={classes.saturationThumb}\n        style={{ backgroundColor: color }}\n        size={size}\n      />\n    </div>\n  );\n}\n\nSaturation.displayName = '@mantine/core/Saturation';\n"]},"metadata":{},"sourceType":"module"}