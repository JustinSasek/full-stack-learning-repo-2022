{"ast":null,"code":"function validateListValues(values, key, rules) {\n  var list = values[key];\n  var results = {};\n  list.forEach(function (item, itemIndex) {\n    if (typeof item === \"object\" && item !== null) {\n      Object.keys(item).forEach(function (listItemKey) {\n        if (typeof rules[key][listItemKey] === \"function\") {\n          var error = rules[key][listItemKey](item[listItemKey], values);\n          if (error) {\n            results[\"\".concat(key, \".\").concat(itemIndex, \".\").concat(listItemKey)] = error;\n          }\n        }\n      });\n    }\n  });\n  return results;\n}\nexport { validateListValues };","map":{"version":3,"mappings":"AAAO,SAASA,kBAAkB,CAACC,MAAM,EAAEC,GAAG,EAAEC,KAAK,EAAE;EACrD,IAAMC,IAAI,GAAGH,MAAM,CAACC,GAAG,CAAC;EACxB,IAAMG,OAAO,GAAG,EAAE;EAClBD,IAAI,CAACE,OAAO,CAAC,UAACC,IAAI,EAAEC,SAAS,EAAK;IAChC,IAAI,OAAOD,IAAI,KAAK,QAAQ,IAAIA,IAAI,KAAK,IAAI,EAAE;MAC7CE,MAAM,CAACC,IAAI,CAACH,IAAI,CAAC,CAACD,OAAO,CAAC,UAACK,WAAW,EAAK;QACzC,IAAI,OAAOR,KAAK,CAACD,GAAG,CAAC,CAACS,WAAW,CAAC,KAAK,UAAU,EAAE;UACjD,IAAMC,KAAK,GAAGT,KAAK,CAACD,GAAG,CAAC,CAACS,WAAW,CAAC,CAACJ,IAAI,CAACI,WAAW,CAAC,EAAEV,MAAM,CAAC;UAChE,IAAIW,KAAK,EAAE;YACTP,OAAO,WAAIH,GAAG,cAAIM,SAAS,cAAIG,WAAW,EAAG,GAAGC,KAAK;UACjE;QACA;MACA,CAAO,CAAC;IACR;EACA,CAAG,CAAC;EACF,OAAOP,OAAO;AAChB","names":["validateListValues","values","key","rules","list","results","forEach","item","itemIndex","Object","keys","listItemKey","error"],"sources":["../../src/validate-values/validate-list-values.ts"],"sourcesContent":["import type { FormList } from '../form-list/form-list';\nimport type { FormRulesRecord, FormErrors } from '../types';\n\nexport function validateListValues<T>(values: T, key: string, rules: FormRulesRecord<T>) {\n  const list: FormList<any> = values[key] as any;\n  const results: FormErrors = {};\n\n  list.forEach((item, itemIndex) => {\n    if (typeof item === 'object' && item !== null) {\n      Object.keys(item).forEach((listItemKey) => {\n        if (typeof rules[key][listItemKey] === 'function') {\n          const error = rules[key][listItemKey](item[listItemKey], values);\n          if (error) {\n            results[`${key}.${itemIndex}.${listItemKey}`] = error;\n          }\n        }\n      });\n    }\n  });\n\n  return results;\n}\n"]},"metadata":{},"sourceType":"module"}