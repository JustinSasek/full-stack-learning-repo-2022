{"ast":null,"code":"import _toConsumableArray from \"/Users/justinsasek/Code/TPEO/full-stack-learning-repo-2022/Week_9/homework frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _defineProperty from \"/Users/justinsasek/Code/TPEO/full-stack-learning-repo-2022/Week_9/homework frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/Users/justinsasek/Code/TPEO/full-stack-learning-repo-2022/Week_9/homework frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createForOfIteratorHelper from \"/Users/justinsasek/Code/TPEO/full-stack-learning-repo-2022/Week_9/homework frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport { useState } from 'react';\nimport { isFormList, formList } from './form-list/form-list.js';\nimport { validateValues, validateFieldValue } from './validate-values/validate-values.js';\nimport { filterErrors } from './filter-errors/filter-errors.js';\nimport { getInputOnChange } from './get-input-on-change/get-input-on-change.js';\nimport { getErrorPath } from './get-error-path/get-error-path.js';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = function __defNormalProp(obj, key, value) {\n  return key in obj ? __defProp(obj, key, {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: value\n  }) : obj[key] = value;\n};\nvar __spreadValues = function __spreadValues(a, b) {\n  for (var prop in b || (b = {})) {\n    if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  if (__getOwnPropSymbols) {\n    var _iterator = _createForOfIteratorHelper(__getOwnPropSymbols(b)),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var prop = _step.value;\n        if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  return a;\n};\nvar __spreadProps = function __spreadProps(a, b) {\n  return __defProps(a, __getOwnPropDescs(b));\n};\nfunction useForm(_ref) {\n  var initialValues = _ref.initialValues,\n    initialErrors = _ref.initialErrors,\n    rules = _ref.validate,\n    schema = _ref.schema;\n  var _useState = useState(filterErrors(initialErrors)),\n    _useState2 = _slicedToArray(_useState, 2),\n    errors = _useState2[0],\n    setErrors = _useState2[1];\n  var _useState3 = useState(initialValues),\n    _useState4 = _slicedToArray(_useState3, 2),\n    values = _useState4[0],\n    setValues = _useState4[1];\n  var clearErrors = function clearErrors() {\n    return setErrors({});\n  };\n  var setFieldError = function setFieldError(field, error) {\n    return setErrors(function (current) {\n      return __spreadProps(__spreadValues({}, current), _defineProperty({}, field, error));\n    });\n  };\n  var clearFieldError = function clearFieldError(field) {\n    return setErrors(function (current) {\n      var clone = __spreadValues({}, current);\n      delete clone[field];\n      return clone;\n    });\n  };\n  var setFieldValue = function setFieldValue(field, value, errorPath) {\n    setValues(function (currentValues) {\n      return __spreadProps(__spreadValues({}, currentValues), _defineProperty({}, field, value));\n    });\n    clearFieldError(errorPath || field);\n  };\n  var setListItem = function setListItem(field, index, value, errorPath) {\n    var list = values[field];\n    if (isFormList(list) && list[index] !== void 0) {\n      var cloned = _toConsumableArray(list);\n      cloned[index] = value;\n      setFieldValue(field, formList(cloned), errorPath);\n    }\n  };\n  var removeListItem = function removeListItem(field, indices) {\n    var list = values[field];\n    if (isFormList(list)) {\n      setFieldValue(field, formList(list.filter(function (_, index) {\n        return Array.isArray(indices) ? !indices.includes(index) : indices !== index;\n      })));\n    }\n  };\n  var addListItem = function addListItem(field, payload) {\n    var list = values[field];\n    if (isFormList(list)) {\n      setFieldValue(field, formList([].concat(_toConsumableArray(list), [payload])));\n    }\n  };\n  var reorderListItem = function reorderListItem(field, _ref2) {\n    var from = _ref2.from,\n      to = _ref2.to;\n    var list = values[field];\n    if (isFormList(list) && list[from] !== void 0 && list[to] !== void 0) {\n      var cloned = _toConsumableArray(list);\n      var item = list[from];\n      cloned.splice(from, 1);\n      cloned.splice(to, 0, item);\n      setFieldValue(field, formList(cloned));\n    }\n  };\n  var validate = function validate() {\n    var results = validateValues(schema || rules, values);\n    setErrors(results.errors);\n    return results;\n  };\n  var validateField = function validateField(field) {\n    var results = validateFieldValue(field, schema || rules, values);\n    results.hasError ? setFieldError(field, results.error) : clearFieldError(field);\n    return results;\n  };\n  var onSubmit = function onSubmit(handleSubmit) {\n    return function (event) {\n      event.preventDefault();\n      var results = validate();\n      !results.hasErrors && handleSubmit(values, event);\n    };\n  };\n  var reset = function reset() {\n    setValues(initialValues);\n    clearErrors();\n  };\n  var getInputProps = function getInputProps(field) {\n    var _ref3 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      type = _ref3.type,\n      _ref3$withError = _ref3.withError,\n      withError = _ref3$withError === void 0 ? true : _ref3$withError;\n    var value = values[field];\n    var onChange = getInputOnChange(function (val) {\n      return setFieldValue(field, val);\n    });\n    var payload = type === \"checkbox\" ? {\n      checked: value,\n      onChange: onChange\n    } : {\n      value: value,\n      onChange: onChange\n    };\n    if (withError && errors[field]) {\n      payload.error = errors[field];\n    }\n    return payload;\n  };\n  var getListInputProps = function getListInputProps(field, index, listField) {\n    var _ref4 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},\n      type = _ref4.type,\n      _ref4$withError = _ref4.withError,\n      withError = _ref4$withError === void 0 ? true : _ref4$withError;\n    var list = values[field];\n    if (isFormList(list) && list[index] && listField in list[index]) {\n      var listValue = list[index];\n      var value = listValue[listField];\n      var listItemErrorPath = getErrorPath([field, index, listField]);\n      var onChange = getInputOnChange(function (val) {\n        return setListItem(field, index, __spreadProps(__spreadValues({}, listValue), _defineProperty({}, listField, val)), listItemErrorPath);\n      });\n      var payload = type === \"checkbox\" ? {\n        checked: value,\n        onChange: onChange\n      } : {\n        value: value,\n        onChange: onChange\n      };\n      var error = errors[getErrorPath([field, index, listField])];\n      if (withError && error) {\n        payload.error = error;\n      }\n      return payload;\n    }\n    return {};\n  };\n  return {\n    values: values,\n    setValues: setValues,\n    setFieldValue: setFieldValue,\n    errors: errors,\n    setErrors: setErrors,\n    clearErrors: clearErrors,\n    clearFieldError: clearFieldError,\n    setFieldError: setFieldError,\n    setListItem: setListItem,\n    removeListItem: removeListItem,\n    addListItem: addListItem,\n    reorderListItem: reorderListItem,\n    validate: validate,\n    validateField: validateField,\n    onSubmit: onSubmit,\n    reset: reset,\n    getInputProps: getInputProps,\n    getListInputProps: getListInputProps\n  };\n}\nexport { useForm };","map":{"version":3,"mappings":"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","names":["__defProp","Object","defineProperty","__defProps","defineProperties","__getOwnPropDescs","getOwnPropertyDescriptors","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__spreadProps","useForm","initialValues","initialErrors","rules","validate","schema","useState","filterErrors","errors","setErrors","values","setValues","clearErrors","setFieldError","field","error","current","clearFieldError","clone","setFieldValue","errorPath","currentValues","setListItem","index","list","isFormList","cloned","formList","removeListItem","indices","filter","_","Array","isArray","includes","addListItem","payload","reorderListItem","from","to","item","splice","results","validateValues","validateField","validateFieldValue","hasError","onSubmit","handleSubmit","event","preventDefault","hasErrors","reset","getInputProps","type","withError","onChange","getInputOnChange","val","checked","getListInputProps","listField","listValue","listItemErrorPath","getErrorPath"],"sources":["../src/use-form.ts"],"sourcesContent":["import { useState } from 'react';\nimport { formList, isFormList, FormList } from './form-list/form-list';\nimport { validateValues, validateFieldValue } from './validate-values/validate-values';\nimport { filterErrors } from './filter-errors/filter-errors';\nimport { getInputOnChange } from './get-input-on-change/get-input-on-change';\nimport { getErrorPath } from './get-error-path/get-error-path';\nimport type {\n  FormErrors,\n  FormRules,\n  FormValidationResult,\n  FormFieldValidationResult,\n  GetInputProps,\n  GetInputPropsFieldType,\n} from './types';\n\nexport interface UseFormInput<T> {\n  initialValues: T;\n  initialErrors?: FormErrors;\n  validate?: FormRules<T>;\n  schema?: (values: Record<string, any>) => FormErrors;\n}\n\nexport interface UseFormReturnType<T> {\n  values: T;\n  setValues: React.Dispatch<React.SetStateAction<T>>;\n  setFieldValue: <K extends keyof T, V extends T[K]>(field: K, value: V) => void;\n  errors: FormErrors;\n  setErrors: React.Dispatch<React.SetStateAction<FormErrors>>;\n  setFieldError: <K extends keyof T>(field: K, error: React.ReactNode) => void;\n  clearFieldError: <K extends keyof T>(field: K) => void;\n  clearErrors(): void;\n  setListItem: <K extends keyof T, V extends T[K]>(\n    field: K,\n    index: number,\n    value: V extends FormList<infer U> ? U : never\n  ) => void;\n  addListItem: <K extends keyof T, V extends T[K]>(\n    field: K,\n    payload: V extends FormList<infer U> ? U : never\n  ) => void;\n  removeListItem: <K extends keyof T>(field: K, indices: number[] | number) => void;\n  reorderListItem: <K extends keyof T>(field: K, payload: { from: number; to: number }) => void;\n  validate(): FormValidationResult;\n  validateField: (field: string) => FormFieldValidationResult;\n  onSubmit(\n    handleSubmit: (values: T, event: React.FormEvent) => void\n  ): (event?: React.FormEvent) => void;\n  reset(): void;\n  getInputProps: <K extends keyof T, L extends GetInputPropsFieldType = 'input'>(\n    field: K,\n    options?: { type?: L; withError?: boolean }\n  ) => GetInputProps<L>;\n\n  getListInputProps: <\n    K extends keyof T,\n    U extends T[K],\n    L extends GetInputPropsFieldType = 'input'\n  >(\n    field: K,\n    index: number,\n    listField: U extends FormList<infer V> ? keyof V : never,\n    options?: { type?: L; withError?: boolean }\n  ) => GetInputProps<L>;\n}\n\nexport function useForm<T extends { [key: string]: any }>({\n  initialValues,\n  initialErrors,\n  validate: rules,\n  schema,\n}: UseFormInput<T>): UseFormReturnType<T> {\n  const [errors, setErrors] = useState(filterErrors(initialErrors));\n  const [values, setValues] = useState(initialValues);\n\n  const clearErrors = () => setErrors({});\n  const setFieldError = (field: keyof T, error: React.ReactNode) =>\n    setErrors((current) => ({ ...current, [field]: error }));\n\n  const clearFieldError = (field: keyof T) =>\n    setErrors((current) => {\n      const clone: any = { ...current };\n      delete clone[field];\n      return clone;\n    });\n\n  const setFieldValue = <K extends keyof T, V extends T[K]>(\n    field: K,\n    value: V,\n    errorPath?: string\n  ) => {\n    setValues((currentValues) => ({ ...currentValues, [field]: value }));\n    clearFieldError(errorPath || field);\n  };\n\n  const setListItem = <K extends keyof T, V extends T[K]>(\n    field: K,\n    index: number,\n    value: V[K][number],\n    errorPath?: string\n  ) => {\n    const list = values[field];\n    if (isFormList(list) && list[index] !== undefined) {\n      const cloned = [...list];\n      cloned[index] = value;\n      setFieldValue(field, formList(cloned) as any, errorPath);\n    }\n  };\n\n  const removeListItem = <K extends keyof T>(field: K, indices: number[] | number) => {\n    const list = values[field];\n\n    if (isFormList(list)) {\n      setFieldValue(\n        field,\n        formList(\n          list.filter((_: any, index: number) =>\n            Array.isArray(indices) ? !indices.includes(index) : indices !== index\n          )\n        ) as any\n      );\n    }\n  };\n\n  const addListItem = <K extends keyof T, V extends T[K]>(field: K, payload: V[number]) => {\n    const list = values[field];\n\n    if (isFormList(list)) {\n      setFieldValue(field, formList([...list, payload]) as any);\n    }\n  };\n\n  const reorderListItem = <K extends keyof T>(\n    field: K,\n    { from, to }: { from: number; to: number }\n  ) => {\n    const list = values[field];\n\n    if (isFormList(list) && list[from] !== undefined && list[to] !== undefined) {\n      const cloned = [...list];\n      const item = list[from];\n\n      cloned.splice(from, 1);\n      cloned.splice(to, 0, item);\n      setFieldValue(field, formList(cloned) as any);\n    }\n  };\n\n  const validate = () => {\n    const results = validateValues(schema || rules, values);\n    setErrors(results.errors);\n    return results;\n  };\n\n  const validateField = (field: string) => {\n    const results = validateFieldValue(field, schema || rules, values);\n    results.hasError ? setFieldError(field, results.error) : clearFieldError(field);\n    return results;\n  };\n\n  const onSubmit =\n    (handleSubmit: (values: T, event: React.FormEvent) => void) => (event: React.FormEvent) => {\n      event.preventDefault();\n      const results = validate();\n      !results.hasErrors && handleSubmit(values, event);\n    };\n\n  const reset = () => {\n    setValues(initialValues);\n    clearErrors();\n  };\n\n  const getInputProps = <\n    K extends keyof T,\n    U extends T[K],\n    L extends GetInputPropsFieldType = 'input'\n  >(\n    field: K,\n    { type, withError = true }: { type?: L; withError?: boolean } = {}\n  ): GetInputProps<L> => {\n    const value = values[field];\n    const onChange = getInputOnChange<U>((val: U) => setFieldValue(field, val)) as any;\n\n    const payload: any = type === 'checkbox' ? { checked: value, onChange } : { value, onChange };\n\n    if (withError && errors[field as any]) {\n      payload.error = errors[field as any];\n    }\n\n    return payload as any;\n  };\n\n  const getListInputProps = <\n    K extends keyof T,\n    U extends T[K][number],\n    LK extends keyof U,\n    L extends GetInputPropsFieldType = 'input'\n  >(\n    field: K,\n    index: number,\n    listField: LK,\n    { type, withError = true }: { type?: L; withError?: boolean } = {}\n  ): GetInputProps<L> => {\n    const list = values[field];\n\n    if (isFormList(list) && list[index] && listField in list[index]) {\n      const listValue = list[index];\n      const value = listValue[listField];\n      const listItemErrorPath = getErrorPath([field, index, listField]);\n      const onChange = getInputOnChange<U[LK]>((val: U[LK]) =>\n        setListItem(field, index, { ...listValue, [listField]: val }, listItemErrorPath)\n      ) as any;\n      const payload: any = type === 'checkbox' ? { checked: value, onChange } : { value, onChange };\n      const error = errors[getErrorPath([field, index, listField])];\n\n      if (withError && error) {\n        payload.error = error;\n      }\n\n      return payload;\n    }\n\n    return {} as any;\n  };\n\n  return {\n    values,\n    setValues,\n    setFieldValue,\n    errors,\n    setErrors,\n    clearErrors,\n    clearFieldError,\n    setFieldError,\n    setListItem,\n    removeListItem,\n    addListItem,\n    reorderListItem,\n    validate,\n    validateField,\n    onSubmit,\n    reset,\n    getInputProps,\n    getListInputProps,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}