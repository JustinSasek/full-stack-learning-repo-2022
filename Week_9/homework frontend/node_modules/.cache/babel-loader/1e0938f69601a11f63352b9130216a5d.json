{"ast":null,"code":"import _slicedToArray from \"/Users/justinsasek/Code/TPEO/full-stack-learning-repo-2022/Week_9/homework frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useState, useCallback } from 'react';\nimport { useWindowEvent } from '../use-window-event/use-window-event.js';\nvar eventListerOptions = {\n  passive: true\n};\nvar browser = typeof window !== \"undefined\";\nfunction useViewportSize() {\n  var _useState = useState({\n      width: browser ? window.innerWidth : 0,\n      height: browser ? window.innerHeight : 0\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    windowSize = _useState2[0],\n    setWindowSize = _useState2[1];\n  var setSize = useCallback(function () {\n    setWindowSize({\n      width: window.innerWidth || 0,\n      height: window.innerHeight || 0\n    });\n  }, []);\n  useWindowEvent(\"resize\", setSize, eventListerOptions);\n  useWindowEvent(\"orientationchange\", setSize, eventListerOptions);\n  return windowSize;\n}\nexport { useViewportSize };","map":{"version":3,"mappings":";;;AAEA,IAAMA,kBAAkB,GAAG;EACzBC,OAAO,EAAE;AACX,CAAC;AACD,IAAMC,OAAO,GAAG,OAAOC,MAAM,KAAK,WAAW;AACtC,SAASC,eAAe,GAAG;EAChC,gBAAoCC,QAAQ,CAAC;MAC3CC,KAAK,EAAEJ,OAAO,GAAGC,MAAM,CAACI,UAAU,GAAG,CAAC;MACtCC,MAAM,EAAEN,OAAO,GAAGC,MAAM,CAACM,WAAW,GAAG;IAC3C,CAAG,CAAC;IAAA;IAHKC,UAAU;IAAEC,aAAa;EAIhC,IAAMC,OAAO,GAAGC,WAAW,CAAC,YAAM;IAChCF,aAAa,CAAC;MACZL,KAAK,EAAEH,MAAM,CAACI,UAAU,IAAI,CAAC;MAC7BC,MAAM,EAAEL,MAAM,CAACM,WAAW,IAAI;IACpC,CAAK,CAAC;EACN,CAAG,EAAE,EAAE,CAAC;EACNK,cAAc,CAAC,QAAQ,EAAEF,OAAO,EAAEZ,kBAAkB,CAAC;EACrDc,cAAc,CAAC,mBAAmB,EAAEF,OAAO,EAAEZ,kBAAkB,CAAC;EAChE,OAAOU,UAAU;AACnB","names":["eventListerOptions","passive","browser","window","useViewportSize","useState","width","innerWidth","height","innerHeight","windowSize","setWindowSize","setSize","useCallback","useWindowEvent"],"sources":["../../src/use-viewport-size/use-viewport-size.ts"],"sourcesContent":["import { useCallback, useState } from 'react';\nimport { useWindowEvent } from '../use-window-event/use-window-event';\n\nconst eventListerOptions = {\n  passive: true,\n};\n\nconst browser = typeof window !== 'undefined';\n\nexport function useViewportSize() {\n  const [windowSize, setWindowSize] = useState({\n    width: browser ? window.innerWidth : 0,\n    height: browser ? window.innerHeight : 0,\n  });\n\n  const setSize = useCallback(() => {\n    setWindowSize({\n      width: window.innerWidth || 0,\n      height: window.innerHeight || 0,\n    });\n  }, []);\n\n  useWindowEvent('resize', setSize, eventListerOptions);\n  useWindowEvent('orientationchange', setSize, eventListerOptions);\n\n  return windowSize;\n}\n"]},"metadata":{},"sourceType":"module"}