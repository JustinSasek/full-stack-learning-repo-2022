{"ast":null,"code":"import { fromEntries } from './utils/from-entries/from-entries.js';\nimport { useCss } from './use-css.js';\nimport { useMantineTheme, useMantineThemeStyles } from '../theme/MantineProvider.js';\nimport { mergeClassNames } from './utils/merge-class-names/merge-class-names.js';\nfunction createStyles(getCssObjectOrCssObject) {\n  var getCssObject = typeof getCssObjectOrCssObject === \"function\" ? getCssObjectOrCssObject : function () {\n    return getCssObjectOrCssObject;\n  };\n  function useStyles(params, options) {\n    var theme = useMantineTheme();\n    var _useMantineThemeStyle = useMantineThemeStyles(options == null ? void 0 : options.name),\n      themeStyles = _useMantineThemeStyle.styles,\n      themeClassNames = _useMantineThemeStyle.classNames;\n    var _useCss = useCss(),\n      css = _useCss.css,\n      cx = _useCss.cx;\n    function createRef(refName) {\n      return \"__mantine-ref-\".concat(refName || \"\");\n    }\n    var cssObject = getCssObject(theme, params, createRef);\n    var _styles = typeof (options == null ? void 0 : options.styles) === \"function\" ? options == null ? void 0 : options.styles(theme) : (options == null ? void 0 : options.styles) || {};\n    var _themeStyles = typeof themeStyles === \"function\" ? themeStyles(theme, params || {}) : themeStyles || {};\n    var classes = fromEntries(Object.keys(cssObject).map(function (key) {\n      var mergedStyles = cx(css(cssObject[key]), css(_themeStyles[key]), css(_styles[key]));\n      return [key, mergedStyles];\n    }));\n    return {\n      classes: mergeClassNames(cx, classes, themeClassNames, options == null ? void 0 : options.classNames, options == null ? void 0 : options.name),\n      cx: cx,\n      theme: theme\n    };\n  }\n  return useStyles;\n}\nexport { createStyles };","map":{"version":3,"mappings":";;;;AAIO,SAASA,YAAY,CAACC,uBAAuB,EAAE;EACpD,IAAMC,YAAY,GAAG,OAAOD,uBAAuB,KAAK,UAAU,GAAGA,uBAAuB,GAAG;IAAA,OAAMA,uBAAuB;EAAA;EAC5H,SAASE,SAAS,CAACC,MAAM,EAAEC,OAAO,EAAE;IAClC,IAAMC,KAAK,GAAGC,eAAe,EAAE;IAC/B,4BAA6DC,qBAAqB,CAACH,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACI,IAAI,CAAC;MAA3GC,WAAW,yBAAnBC,MAAM;MAA2BC,eAAe,yBAA3BC,UAAU;IACvC,cAAoBC,MAAM,EAAE;MAApBC,GAAG,WAAHA,GAAG;MAAEC,EAAE,WAAFA,EAAE;IACf,SAASC,SAAS,CAACC,OAAO,EAAE;MAC1B,+BAAwBA,OAAO,IAAI,EAAE;IAC3C;IACI,IAAMC,SAAS,GAAGjB,YAAY,CAACI,KAAK,EAAEF,MAAM,EAAEa,SAAS,CAAC;IACxD,IAAMG,OAAO,GAAG,QAAQf,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACM,MAAM,CAAC,KAAK,UAAU,GAAGN,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACM,MAAM,CAACL,KAAK,CAAC,GAAG,CAACD,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACM,MAAM,KAAK,EAAE;IACxL,IAAMU,YAAY,GAAG,OAAOX,WAAW,KAAK,UAAU,GAAGA,WAAW,CAACJ,KAAK,EAAEF,MAAM,IAAI,EAAE,CAAC,GAAGM,WAAW,IAAI,EAAE;IAC7G,IAAMY,OAAO,GAAGC,WAAW,CAACC,MAAM,CAACC,IAAI,CAACN,SAAS,CAAC,CAACO,GAAG,CAAC,UAACC,GAAG,EAAK;MAC9D,IAAMC,YAAY,GAAGZ,EAAE,CAACD,GAAG,CAACI,SAAS,CAACQ,GAAG,CAAC,CAAC,EAAEZ,GAAG,CAACM,YAAY,CAACM,GAAG,CAAC,CAAC,EAAEZ,GAAG,CAACK,OAAO,CAACO,GAAG,CAAC,CAAC,CAAC;MACvF,OAAO,CAACA,GAAG,EAAEC,YAAY,CAAC;IAChC,CAAK,CAAC,CAAC;IACH,OAAO;MACLN,OAAO,EAAEO,eAAe,CAACb,EAAE,EAAEM,OAAO,EAAEV,eAAe,EAAEP,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACQ,UAAU,EAAER,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACI,IAAI,CAAC;MAC9IO,EAAE,EAAFA,EAAE;MACFV,KAAK,EAALA;IACN,CAAK;EACL;EACE,OAAOH,SAAS;AAClB","names":["createStyles","getCssObjectOrCssObject","getCssObject","useStyles","params","options","theme","useMantineTheme","useMantineThemeStyles","name","themeStyles","styles","themeClassNames","classNames","useCss","css","cx","createRef","refName","cssObject","_styles","_themeStyles","classes","fromEntries","Object","keys","map","key","mergedStyles","mergeClassNames"],"sources":["../../src/tss/create-styles.ts"],"sourcesContent":["import type { MantineTheme } from '../theme';\nimport type { CSSObject } from './types';\nimport { fromEntries } from './utils/from-entries/from-entries';\nimport { useCss } from './use-css';\nimport { useMantineTheme, useMantineThemeStyles } from '../theme/MantineProvider';\nimport { mergeClassNames } from './utils/merge-class-names/merge-class-names';\n\nexport interface UseStylesOptions<Key extends string> {\n  classNames?: Partial<Record<Key, string>>;\n  styles?:\n    | Partial<Record<Key, CSSObject>>\n    | ((theme: MantineTheme) => Partial<Record<Key, CSSObject>>);\n  name: string;\n}\n\nexport function createStyles<Key extends string = string, Params = void>(\n  getCssObjectOrCssObject:\n    | ((\n        theme: MantineTheme,\n        params: Params,\n        createRef: (refName: string) => string\n      ) => Record<Key, CSSObject>)\n    | Record<Key, CSSObject>\n) {\n  const getCssObject =\n    typeof getCssObjectOrCssObject === 'function'\n      ? getCssObjectOrCssObject\n      : () => getCssObjectOrCssObject;\n\n  function useStyles(params: Params, options?: UseStylesOptions<Key>) {\n    const theme = useMantineTheme();\n    const { styles: themeStyles, classNames: themeClassNames } = useMantineThemeStyles(\n      options?.name\n    );\n\n    const { css, cx } = useCss();\n\n    function createRef(refName: string) {\n      return `__mantine-ref-${refName || ''}`;\n    }\n\n    const cssObject = getCssObject(theme, params, createRef);\n\n    const _styles =\n      typeof options?.styles === 'function' ? options?.styles(theme) : options?.styles || {};\n    const _themeStyles =\n      typeof themeStyles === 'function' ? themeStyles(theme, params || {}) : themeStyles || {};\n\n    const classes = fromEntries(\n      Object.keys(cssObject).map((key) => {\n        const mergedStyles = cx(css(cssObject[key]), css(_themeStyles[key]), css(_styles[key]));\n        return [key, mergedStyles];\n      })\n    ) as Record<Key, string>;\n\n    return {\n      classes: mergeClassNames(cx, classes, themeClassNames, options?.classNames, options?.name),\n      cx,\n      theme,\n    };\n  }\n\n  return useStyles;\n}\n"]},"metadata":{},"sourceType":"module"}