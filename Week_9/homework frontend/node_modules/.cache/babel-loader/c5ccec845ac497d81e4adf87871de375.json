{"ast":null,"code":"var LIST_IDENTIFIER = Symbol(\"@mantine/form/list\");\nfunction formList(list) {\n  Object.defineProperty(list, LIST_IDENTIFIER, {\n    value: true,\n    writable: false,\n    enumerable: false,\n    configurable: false\n  });\n  return list;\n}\nfunction isFormList(list) {\n  return Array.isArray(list) && !!list[LIST_IDENTIFIER];\n}\nexport { formList, isFormList };","map":{"version":3,"mappings":"AAAA,IAAMA,eAAe,GAAGC,MAAM,CAAC,oBAAoB,CAAC;AAC7C,SAASC,QAAQ,CAACC,IAAI,EAAE;EAC7BC,MAAM,CAACC,cAAc,CAACF,IAAI,EAAEH,eAAe,EAAE;IAC3CM,KAAK,EAAE,IAAI;IACXC,QAAQ,EAAE,KAAK;IACfC,UAAU,EAAE,KAAK;IACjBC,YAAY,EAAE;EAClB,CAAG,CAAC;EACF,OAAON,IAAI;AACb;AACO,SAASO,UAAU,CAACP,IAAI,EAAE;EAC/B,OAAOQ,KAAK,CAACC,OAAO,CAACT,IAAI,CAAC,IAAI,CAAC,CAACA,IAAI,CAACH,eAAe,CAAC;AACvD","names":["LIST_IDENTIFIER","Symbol","formList","list","Object","defineProperty","value","writable","enumerable","configurable","isFormList","Array","isArray"],"sources":["../../src/form-list/form-list.ts"],"sourcesContent":["const LIST_IDENTIFIER = Symbol('@mantine/form/list');\n\nexport interface FormList<T> extends Array<T> {\n  [LIST_IDENTIFIER]: true;\n}\n\nexport function formList<T>(list: T[]): FormList<T> {\n  Object.defineProperty(list, LIST_IDENTIFIER, {\n    value: true,\n    writable: false,\n    enumerable: false,\n    configurable: false,\n  });\n\n  return list as FormList<T>;\n}\n\nexport function isFormList(list: unknown) {\n  return Array.isArray(list) && !!list[LIST_IDENTIFIER];\n}\n"]},"metadata":{},"sourceType":"module"}