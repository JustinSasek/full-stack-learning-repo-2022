{"ast":null,"code":"import _slicedToArray from \"/Users/justinsasek/Code/TPEO/full-stack-learning-repo-2022/Week_9/homework frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport * as e from \"react\";\nexport function useDirection(t, n) {\n  var _e$useState = e.useState(\"ltr\"),\n    _e$useState2 = _slicedToArray(_e$useState, 2),\n    r = _e$useState2[0],\n    o = _e$useState2[1],\n    _e$useState3 = e.useState(),\n    _e$useState4 = _slicedToArray(_e$useState3, 2),\n    i = _e$useState4[0],\n    u = _e$useState4[1],\n    c = e.useRef(0);\n  return e.useEffect(function () {\n    if (void 0 === n && null != t && t.parentElement) {\n      var _e = getComputedStyle(t.parentElement);\n      u(_e);\n    }\n  }, [t, n]), e.useEffect(function () {\n    return void 0 === n && function e() {\n      c.current = requestAnimationFrame(function () {\n        var t = null == i ? void 0 : i.direction;\n        t && o(t), e();\n      });\n    }(), function () {\n      return cancelAnimationFrame(c.current);\n    };\n  }, [i, n, o]), n || r;\n}","map":{"version":3,"mappings":";;OAIO,SAASA,aAAaC,GAA6BC;EACxD,kBAAkCC,EAAMC,SAAoB;IAAA;IAArDC;IAAWC;IAAAA,eACwBH,EAAMC;IAAAA;IAAzCG;IAAeC;IAChBC,IAASN,EAAMO,OAAe;EA0BpC,OAxBAP,EAAMQ,UAAU;IAKd,SAAsBC,MAAlBV,aAA+BD,OAASY,eAAe;MACzD,IAAMN,KAAgBO,iBAAiBb,EAAQY;MAC/CL,EAAiBD;IAAAA;EAAAA,GAElB,CAACN,GAASC,KAEbC,EAAMQ,UAAU;IAAA,YASQC,MAAlBV,KARJ,SAASa;MACPN,EAAOO,UAAUC,sBAAsB;QACrC,IAAMC,IAAMX,iBAAH,IAAGA,EAAeF;QACvBa,KAAKZ,EAAaY,IACtBH;MAAAA;IAAAA,CAI6BA,IAC1B;MAAA,OAAMI,qBAAqBV,EAAOO;IAAAA;EAAAA,GACxC,CAACT,GAAeL,GAAeI,KAE3BJ,KAAiBG;AAAAA","names":["useDirection","element","directionProp","React","useState","direction","setDirection","computedStyle","setComputedStyle","rAFRef","useRef","useEffect","undefined","parentElement","getComputedStyle","getDirection","current","requestAnimationFrame","dir","cancelAnimationFrame"],"sources":["./packages/react/use-direction/src/useDirection.tsx"],"sourcesContent":["import * as React from 'react';\n\ntype Direction = 'ltr' | 'rtl';\n\nexport function useDirection(element: HTMLElement | null, directionProp?: Direction) {\n  const [direction, setDirection] = React.useState<Direction>('ltr');\n  const [computedStyle, setComputedStyle] = React.useState<CSSStyleDeclaration>();\n  const rAFRef = React.useRef<number>(0);\n\n  React.useEffect(() => {\n    // We check inherited direction of the parent instead of the `element` itself.\n    // This is because we internally set the computed `dir` on the element so wouldn't be\n    // able to react to changes to the inherited direction. The `dir` attribute we set should\n    // always sync with the direction prop OR its inherited direction.\n    if (directionProp === undefined && element?.parentElement) {\n      const computedStyle = getComputedStyle(element.parentElement);\n      setComputedStyle(computedStyle);\n    }\n  }, [element, directionProp]);\n\n  React.useEffect(() => {\n    function getDirection() {\n      rAFRef.current = requestAnimationFrame(() => {\n        const dir = computedStyle?.direction as Direction | '' | undefined;\n        if (dir) setDirection(dir);\n        getDirection();\n      });\n    }\n\n    if (directionProp === undefined) getDirection();\n    return () => cancelAnimationFrame(rAFRef.current);\n  }, [computedStyle, directionProp, setDirection]);\n\n  return directionProp || direction;\n}\n"]},"metadata":{},"sourceType":"module"}